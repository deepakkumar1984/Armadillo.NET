// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
using System.Runtime.CompilerServices;

[assembly:InternalsVisibleTo("Armadillo")]

namespace Std
{
    namespace MersenneTwisterEngine
    {
        [StructLayout(LayoutKind.Explicit, Size = 5008)]
        public unsafe partial struct __Internalc__N_std_S_mersenne_twister_engine__k_Vk64_Vk312_Vk156_Vk31_Vk13043109905998158313_Vk29_Vk6148914691236517205_Vk17_Vk8202884508482404352_Vk37_Vk18444473444759240704_Vk43_Vk6364136223846793005
        {
            [FieldOffset(0)]
            internal uint _Idx;

            [FieldOffset(8)]
            internal fixed ulong _Ax[624];

            [FieldOffset(5000)]
            internal ulong _Dxval;
        }
    }

    namespace UniformIntDistribution
    {
        [StructLayout(LayoutKind.Explicit, Size = 8)]
        public unsafe partial struct __Internalc__N_std_S_uniform_int_distribution__I
        {
            [FieldOffset(0)]
            internal global::Std.UniformInt.ParamType.__Internalc__N_std_S_uniform_int__I _Par;
        }
    }

    namespace UniformInt
    {
        [StructLayout(LayoutKind.Explicit, Size = 8)]
        public unsafe partial struct __Internalc__N_std_S_uniform_int__I
        {
            [FieldOffset(0)]
            internal global::Std.UniformInt.ParamType.__Internalc__N_std_S_uniform_int__I _Par;
        }

        namespace ParamType
        {
            [StructLayout(LayoutKind.Explicit, Size = 8)]
            public unsafe partial struct __Internalc__N_std_S_uniform_int__I
            {
                [FieldOffset(0)]
                internal int _Min;

                [FieldOffset(4)]
                internal int _Max;
            }
        }

    }

    namespace UniformRealDistribution
    {
        [StructLayout(LayoutKind.Explicit, Size = 16)]
        public unsafe partial struct __Internalc__N_std_S_uniform_real_distribution__d
        {
            [FieldOffset(0)]
            internal global::Std.UniformReal.ParamType.__Internalc__N_std_S_uniform_real__d _Par;
        }
    }

    namespace UniformReal
    {
        [StructLayout(LayoutKind.Explicit, Size = 16)]
        public unsafe partial struct __Internalc__N_std_S_uniform_real__d
        {
            [FieldOffset(0)]
            internal global::Std.UniformReal.ParamType.__Internalc__N_std_S_uniform_real__d _Par;
        }

        namespace ParamType
        {
            [StructLayout(LayoutKind.Explicit, Size = 16)]
            public unsafe partial struct __Internalc__N_std_S_uniform_real__d
            {
                [FieldOffset(0)]
                internal double _Min;

                [FieldOffset(8)]
                internal double _Max;
            }
        }

    }

    namespace NormalDistribution
    {
        [StructLayout(LayoutKind.Explicit, Size = 32)]
        public unsafe partial struct __Internalc__N_std_S_normal_distribution__d
        {
            [FieldOffset(0)]
            internal global::Std.NormalDistribution.ParamType.__Internalc__N_std_S_normal_distribution__d _Par;

            [FieldOffset(16)]
            internal byte _Valid;

            [FieldOffset(24)]
            internal double _X2;
        }

        namespace ParamType
        {
            [StructLayout(LayoutKind.Explicit, Size = 16)]
            public unsafe partial struct __Internalc__N_std_S_normal_distribution__d
            {
                [FieldOffset(0)]
                internal double _Mean;

                [FieldOffset(8)]
                internal double _Sigma;
            }
        }

    }
}
